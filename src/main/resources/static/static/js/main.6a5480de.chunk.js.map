{"version":3,"sources":["logo.svg","Choice/ChoiceService.js","Authenciation/Place.js","Authenciation/LocationService.js","Choice/Choice.js","SelectPlace/Map.js","SelectPlace/SelectPlace.js","DashBoard/DashService.js","DashBoard/DashBoard.js","Authenciation/AuthenciationService.js","Authenciation/Locat.js","Authenciation/SignUp.js","Authenciation/Login.js","NavBAr/MenuComponent.js","Authenciation/ThankYou.js","Authenciation/Message.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","SUBMIT_URL","headers","localStorage","getItem","help","console","log","axios","post","Place","props","handleChange","address","setState","state","city","area","postalcode","setFormLocation","bind","handleSelect","place","this","onSelect","geocodeByAddress","then","results","addressArray","address_components","catch","error","i","length","types","long_name","j","renderInput","getInputProps","getSuggestionItemProps","suggestions","className","placeholder","map","suggestion","description","type","name","onChange","readOnly","value","React","Component","Choice","var1","var2","var3","lat","lang","location","postal_code","getpostal","submitData","getLocation","handleCo","checkLogin","cordinate","Geocode","fromAddress","response","geometry","lng","fromLatLng","formatted_address","event","target","preventDefault","ChoiceService","history","push","window","reload","id","to","href","onClick","e","withRouter","setApiKey","enableDebug","Map","getCity","getArea","getState","onInfoWindowClose","onMarkerDragEnd","newLat","latLng","newLng","markerPosition","mapPosition","onPlaceSelected","latValue","lngValue","sugg","center","loc","onSuggestion","nextProps","nextState","Axios","AsyncMap","withScriptjs","withGoogleMap","google","defaultZoom","zoom","defaultCenter","onClose","position","style","padding","margin","draggable","onDragEnd","undefined","htmlFor","googleMapURL","loadingElement","containerElement","height","mapElement","SelectPlace","loading","query","search","values","queryString","parse","substr","parseFloat","get","DashBoard","email","phone","helped","DashService","retrieveValue","data","getData","firstName","phoneNumber","class","src","alt","$signin","username","token","role","setItem","setupAxiosInterceptors","createJWTToken","$signup","removeItem","interceptors","request","use","config","authorization","Locat","SignUp","sname","numb","postcode","rid","psw","street","phn","hphn","cit","LocationService","postal","signup","surname","postalCode","rId","AuthenciationService","signUpRequest","pathname","detail","showSuccessMessage","hasLoginFailed","required","defaultValue","selected","for","Login","sucessLogin","failedLogin","signIn","usernameOrEmail","password","executeJwtAuthenticationService","accessToken","registerSuccessfulLoginForJwt","isUserLoggedIn","align","MenuComponent","loggedIn","AppBar","Toolbar","logout","ThankYOu","Message","App","path","exact","component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.6a5480de.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import axios from 'axios' \nconst API_URL = '/send/' \nconst SUBMIT_URL = `${API_URL}`\nexport const TOKEN=\"token\"\nexport const headers = { \n  'Authorization': 'Bearer '+localStorage.getItem(`${TOKEN}`)\n}\nclass ChoiceService {\n  \n   ChoiceService(help)\n   {\n    console.log(help)\n    console.log(\"let me check\")\n    console.log(headers)\n     return  axios.post(`${SUBMIT_URL}`,help,headers)\n    \n  }\n   \n\n  \n}\nexport default new ChoiceService();","import React from 'react'; \nimport PlacesAutocomplete, { geocodeByAddress } from 'react-places-autocomplete'\n\nimport '../SelectPlace/Map.css'\nclass Place extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { address: '',\n                    city:'',\n                  area:'',\n                state:'',\n              postalcode:'' }\n    this.setFormLocation = this.setFormLocation.bind(this)\n    this.handleSelect = this.handleSelect.bind(this)\n  }\n\n  handleChange = (address) => {\n    this.setState({ address })\n  }\n\n  // When the user selects an autocomplete suggestion...\n  handleSelect  (place)\n   {\n    // Pull in the setFormLocation function from the parent ReportForm\n   // const setFormLocation = this.props.setFormLocation\n      this.props.onSelect(place); \n       \n    geocodeByAddress(place)\n      .then(results =>{ \n    const   addressArray =  results[0].address_components\n    console.log(addressArray)\n     const city=this.setFormLocation ( addressArray )\n       })\n      .catch(error =>\n        {console.error('Error', error)\n\n\n      })\n      \n  }\n  setFormLocation ( addressArray )\n  {\n    console.log(\"heloo this method is working \")\n    let city = '';\n    let state ='';\n    let area='';\n    for( let i = 0; i < addressArray.length; i++ )\n     {\n      if ( addressArray[ i ].types[0] && 'administrative_area_level_2' === addressArray[ i ].types[0] )\n       {\n        city ='City :'+ addressArray[ i ].long_name;\n        this.setState({city : city})\n        console.log(city)\n       } \n       if ( addressArray[ i ].types[0] && 'administrative_area_level_1' === addressArray[ i ].types[0] )\n        {\n       state = 'State :'+addressArray[ i ].long_name;\n       this.setState({state: state})\n       console.log(state)\n        } \n        if ( addressArray[ i ].types[0]  ) {\n          for ( let j = 0; j < addressArray[ i ].types.length; j++ ) {\n            if ( 'sublocality_level_1' === addressArray[ i ].types[j] || 'locality' === addressArray[ i ].types[j] ) {\n              area = 'Area :'+ addressArray[ i ].long_name;\n              this.setState({area : area})\n              console.log(area)\n            }\n          }\n        }\n       console.log(city+state+area)\n\t\t}\n\t};\n\n  render() {\n    const renderInput = ({ getInputProps, getSuggestionItemProps, suggestions }) => (\n      \n      <div className=\"autocomplete-root\"\n     >\n        <input className=\"form-control\" \n         \n     { ...getInputProps({\n      placeholder: 'Location '})}\n      {...getInputProps()}  />\n        <div className=\"autocomplete-dropdown-container\">\n          {suggestions.map(suggestion => (\n           // <!-- Add a style of \"suggestion\" to the suggested locations -->\n            <div {...getSuggestionItemProps(suggestion)} className=\"suggestion\">\n              <span>{suggestion.description}</span>\n            </div>\n          ))}\n        </div>\n         \t<div className=\"form-group\"> \n\t\t\t\t\t\t<input type=\"text\"  placeholder = 'City' name=\"city\" className=\"form-control\" onChange={ this.onChange } readOnly=\"readOnly\" value={ this.state.city }/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"form-group\"> \n\t\t\t\t\t\t<input type=\"text\" placeholder = 'Area'name=\"area\" className=\"form-control\" onChange={ this.onChange } readOnly=\"readOnly\" value={ this.state.area }/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"form-group\"> \n\t\t\t\t\t\t<input type=\"text\"  placeholder = 'State' name=\"state\" className=\"form-control\" onChange={ this.onChange } readOnly=\"readOnly\" value={ this.state.state }/>\n\t\t</div>  \n      </div>\n    );\n\n    // Limit the suggestions to show only cities in the US\n     /*const searchOptions = {\n      types: ['(cities)'],\n      componentRestrictions: {country: \"us\"}\n     }\n*/\n    return (\n      <PlacesAutocomplete\n        value={this.state.address}\n        onChange={this.handleChange}\n        onSelect={this.handleSelect} \n        renderInput={{ placeholder: 'Enter address' }}\n        // Pass the search options prop\n        //searchOptions={searchOptions}\n        \n      >\n        {renderInput}\n      </PlacesAutocomplete>\n    );\n  }\n \n}\n\nexport default Place;\n","class LocationService \n{\n    getCity(addressArray)\n    { \n        let city=''\n        for( let i = 0; i < addressArray.length; i++ )\n        {\n            if ( addressArray[ i ].types[0] && 'administrative_area_level_2' === addressArray[ i ].types[0] )\n            {\n             city =  addressArray[ i ].long_name;\n             return city;\n            } \n        } \n    }\n    getpostal(addressArray)\n    {\n        let city = '';\n        for( let i = 0; i < addressArray.length; i++ ) \n        {\n\t\t\tif ( addressArray[ i ].types[0] && 'postal_code' === addressArray[ i ].types[0] ) {\n           \n                city = addressArray[ i ].long_name;\n                console.log(city)\n\t\t\t\treturn city; }\n        } \n    } \n}\nexport default new LocationService()","import   React  from 'react'\nimport Geocode from \"react-geocode\";\nimport axios from 'axios' \nimport { BrowserRouter as Router, Route, history, Redirect ,Link} from 'react-router-dom'\nimport  './styleMedia.css' \n\nimport { withRouter } from 'react-router';  \nimport  './styleCommon.css'\nimport ChoiceService from './ChoiceService'\nimport Place from '../Authenciation/Place' \nimport LocationService from '../Authenciation/LocationService'\nclass Choice extends React.Component {\n    constructor(props) \n    {\n      super(props)\n      this.state = {\n        var1:'role1',\n        var2:'role1',\n        var3:'role1' ,\n        lat:'',\n        lang:'',\n        location:'',\n        city:'',\n        state:'',\n        area :'',\n        postal_code:''\n\n      }\n      this.handleChange = this.handleChange.bind(this)\n       this.getpostal=this.getpostal.bind(this)\n    this.submitData=this.submitData.bind(this)\n this.getLocation=this.getLocation.bind(this)\nthis.handleCo = this.handleCo.bind(this)\nthis.checkLogin = this.checkLogin.bind(this)\n}\n\n\nhandleCo(cordinate) { \n    this.setState({\n      location : cordinate\n    })\n    Geocode.fromAddress(cordinate).then(\n        response => {\n            console.log(response)\n          const { lat, lng } = response.results[0].geometry.location;\n          this.setState(\n            { lat:lat,\n            lang:lng\n        }  )\n          console.log(this.state.lat)\n          console.log(this.state.lng);\n        },\n        error => {\n          console.error(error);\n        }\n      );\n  }\n    componentDidMount() {\n    /*    console.log('Component did mount!')\n        navigator.geolocation.getCurrentPosition((position) => {\n            console.log(position)\n            this.setState({lat: position.coords.latitude,\n            lang: position.coords.longitude });\n\n        }, (error) => {\n            alert(JSON.stringify(error))\n        }, {\n            enableHighAccuracy: true,\n            timeout: 20000,\n            maximumAge: 1000\n        });\n        console.log( this.state.lat )*/\n      //  this.getLocation();       \n        }\n     getLocation()\n    {\n        Geocode.fromLatLng( this.state.lat , this.state.lang ).then(\n            response => {\n                const address = response.results[0].formatted_address,\n                      addressArray =  response.results[0].address_components,\n                       postal_code =this.getpostal(addressArray)\n                console.log(postal_code) \n                this.setState( {\n                    location:postal_code \n                } )\n            },\n            error => {\n                console.error( error );\n            }\n        );\n       \n    }\n    getpostal(addressArray)\n    {\n        let city = '';\n\t\tfor( let i = 0; i < addressArray.length; i++ ) {\n\t\t\tif ( addressArray[ i ].types[0] && 'postal_code' === addressArray[ i ].types[0] ) {\n\t\t\t\tcity = addressArray[ i ].long_name;\n\t\t\t\treturn city;\n\t\t\t}\n\t\t}\n    }\n    handleChange(event) { \n        const { name, value } = event.target\n        console.log(event.target.name)\n        console.log(event.target.value)\n        this.setState({\n          [name]: value\n        })\n    console.log(this.state.var3)\n  //  this.getLocation();   \n    }\n    \n  submitData(event) {\n  //  this.getLocation()\n  event.preventDefault()\n    console.log(\"hello hunny bunny \") \n    const { name, value } = event.target\n        this.setState({\n          [name]: value\n        })\n    const help={\n        var1: this.state.var1,\n        var2:this.state.var2,\n        var3:this.state.var3,\n        location:this.state.location,\n        lat:this.state.lat,\n        lng:this.state.lang\n    }\n    console.log(help)\n    \n     ChoiceService.ChoiceService (help)\n   .then((response) => {\n     console.log(response) \n     this.checkLogin()\n      }).catch(() => {\n     console.log(\"error in adding \") \n  })\n \n  }  \n  checkLogin() { \n\t\tconsole.log(\"trying to open login page\")\n\t\tthis.props.history.push(\"/dash/\")\n\t\twindow.location.reload(false);\n\t\t \n\t  }\n    \n    render()\n    {\n        return(\n          <section id=\"detailWrap\">\n          <div className=\"container\">\n              <div className=\"row\">\n                  <div className=\"col-sm-12\">\n                      <div className=\"row\">\n                          <div className=\"col-sm-12 help_cov\">\n                             <Link to = \"/dash\"> <a className=\"btn help\" href=\"#\">Home</a></Link>\n                          </div>\n                      </div>\n                      <div className=\"detailBlock\">\n                          <div className=\"look\">\n                              <span>I am looking for</span>\n                          </div>\n                          <form>\n                              <select name=\"var1\" onChange={this.handleChange} className=\"form-control input-lg\">\n                                  <option value=\"1\">.......</option>\n                                  <option value=\"Resturant\">Resturant</option>\n                                  <option value=\"Things To Do\">Things To Do</option>  \n                              </select>\n                              <select name=\"var2\" onChange={this.handleChange} className=\"form-control input-lg\">\n                              <option value=\"Park\">Park </option>\n                                  <option value=\"Club\">Club </option>\n                                  <option value=\"Muesum\">Muesum</option>\n                                  <option value=\"Affordable\">Affordable</option>\n                                  <option value=\"Mid-Range\">Mid-Range </option>\n                                  <option value=\"HighEnd\">HighEnd</option> \n                              </select>\n                              <select name='var3' className=\"form-control input-lg\" onChange={this.handleChange}>\n                              <option value=\"Meat\">Meat </option>\n                                  <option value=\"Fish\">Fish </option>\n                                  <option value=\"Vegeterian\">Vegeterian</option> \n                                  <option value=\"Free\">Free</option>\n                                  <option value=\"Limited Edition\">Limited Edition</option>\n                                  <option value=\"Affordable\">Affordable</option>\n                                  <option value=\"6\"></option>\n                                  </select>\n                                               <b>in the location</b>   \n                                  <Place \n                                     \n                                     onSelect={this.handleCo}   name=\"postcode\"   className=\"form-control\"  />\n                               <button type=\"submit\" \n                              className=\"btn sub_help\"\n                              onClick={(e)=>this.submitData(e)}> Help </button>\n                          </form>\n                      </div>\n                  </div>\n              </div>\n          </div>\n      </section>\n  \n        )\n    }\n}\nexport default withRouter(Choice);","import React, { Component } from 'react';\nimport { withGoogleMap, GoogleMap, withScriptjs, InfoWindow, Marker } from \"react-google-maps\";\nimport Geocode from \"react-geocode\";\nimport Autocomplete from 'react-google-autocomplete';\nimport Axios from 'axios';\nimport { withRouter } from 'react-router';\nimport './Map.css'\nconst API_URL = '/send/suggestion'\nconst SUBMIT_URL = `${API_URL}`\nGeocode.setApiKey(\"AIzaSyD6SFZcoYyCDs21kC_MV5mI12OeyjWyxFc\");\nGeocode.enableDebug();\nexport const TOKEN = \"token\"\nexport const headers = {\n\t'Authorization': 'Bearer ' + localStorage.getItem(TOKEN)\n}\nclass Map extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\taddress: '',\n\t\t\tcity: '',\n\t\t\tarea: '',\n\t\t\tstate: '',\n\t\t\tsugg: '',\n\t\t\tmapPosition: {\n\t\t\t\tlat: this.props.center.lat,\n\t\t\t\tlng: this.props.center.lng\n\t\t\t},\n\t\t\tmarkerPosition: {\n\t\t\t\tlat: this.props.center.lat,\n\t\t\t\tlng: this.props.center.lng\n\t\t\t},\n\t\t\tvar1: this.props.var1,\n\t\t\tvar2: this.props.var2,\n\t\t\tvar3: this.props.var3,\n\t\t\tloc: this.props.loc\n\n\t\t}\n\t\tthis.onSuggestion = this.onSuggestion.bind(this)\n\t}\n\n\tonSuggestion(event) {\n\t\tconsole.log(event.target.value)\n\t\tthis.setState({ [event.target.name]: event.target.value });\n\n\n\t}\n\t/**\n\t * Get the current address from the default map position and set those values in the state\n\t*/\n\tcomponentDidMount() {\n\t\tconsole.log(this.state.var1)\n\t\tconsole.log(this.state.var2)\n\t\tconsole.log(this.state.var3)\n\t\tGeocode.fromLatLng(this.state.mapPosition.lat, this.state.mapPosition.lng).then(\n\t\t\tresponse => {\n\t\t\t\tconst address = response.results[0].formatted_address,\n\t\t\t\t\taddressArray = response.results[0].address_components;\n\n\t\t\t\tthis.setState({\n\t\t\t\t\taddress: (address) ? address : ''\n\t\t\t\t})\n\t\t\t},\n\t\t\terror => {\n\t\t\t\tconsole.error(error);\n\t\t\t}\n\t\t);\n\t};\n\t/**\n\t * Component should only update ( meaning re-render ), when the user selects the address, or drags the pin\n\t *\n\t * @param nextProps\n\t * @param nextState\n\t * @return {boolean}\n\t */\n\tshouldComponentUpdate(nextProps, nextState) {\n\t\tif (\n\t\t\tthis.state.markerPosition.lat !== this.props.center.lat ||\n\t\t\tthis.state.address !== nextState.address ||\n\t\t\tthis.state.city !== nextState.city ||\n\t\t\tthis.state.area !== nextState.area ||\n\t\t\tthis.state.state !== nextState.state\n\t\t) {\n\t\t\treturn true\n\t\t} else if (this.props.center.lat === nextProps.center.lat) {\n\t\t\treturn false\n\t\t}\n\t}\n\t/**\n\t * Get the city and set the city input value to the one selected\n\t *\n\t * @param addressArray\n\t * @return {string}\n\t*/\n\tgetCity = (addressArray) => {\n\t\tlet city = '';\n\t\tfor (let i = 0; i < addressArray.length; i++) {\n\t\t\tif (addressArray[i].types[0] && 'administrative_area_level_2' === addressArray[i].types[0]) {\n\t\t\t\tcity = addressArray[i].long_name;\n\t\t\t\treturn city;\n\t\t\t}\n\t\t}\n\t};\n\t/**\n\t * Get the area and set the area input value to the one selected\n\t *\n\t * @param addressArray\n\t * @return {string}\n\t */\n\tgetArea = (addressArray) => {\n\t\tlet area = '';\n\t\tfor (let i = 0; i < addressArray.length; i++) {\n\t\t\tif (addressArray[i].types[0]) {\n\t\t\t\tfor (let j = 0; j < addressArray[i].types.length; j++) {\n\t\t\t\t\tif ('sublocality_level_1' === addressArray[i].types[j] || 'locality' === addressArray[i].types[j]) {\n\t\t\t\t\t\tarea = addressArray[i].long_name;\n\t\t\t\t\t\treturn area;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\t/**\n\t * Get the address and set the address input value to the one selected\n\t *\n\t * @param addressArray\n\t * @return {string}\n\t */\n\tgetState = (addressArray) => {\n\t\tlet state = '';\n\t\tfor (let i = 0; i < addressArray.length; i++) {\n\t\t\tfor (let i = 0; i < addressArray.length; i++) {\n\t\t\t\tif (addressArray[i].types[0] && 'administrative_area_level_1' === addressArray[i].types[0]) {\n\t\t\t\t\tstate = addressArray[i].long_name;\n\t\t\t\t\treturn state;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\t/**\n\t * And function for city,state and address input\n\t * @param event\n\t */\n\tonChange = (event) => {\n\t\tthis.setState({ [event.target.name]: event.target.value });\n\t};\n\t/**\n\t * This Event triggers when the marker window is closed\n\t *\n\t * @param event\n\t */\n\tonInfoWindowClose = (event) => {\n\n\t};\n\n\t/**\n\t * When the marker is dragged you get the lat and long using the functions available from event object.\n\t * Use geocode to get the address, city, area and state from the lat and lng positions.\n\t * And then set those values in the state.\n\t *\n\t * @param event\n\t */\n\tonMarkerDragEnd = (event) => {\n\t\tlet newLat = event.latLng.lat(),\n\t\t\tnewLng = event.latLng.lng();\n\n\t\tGeocode.fromLatLng(newLat, newLng).then(\n\t\t\tresponse => {\n\t\t\t\tconst address = response.results[0].formatted_address,\n\t\t\t\t\taddressArray = response.results[0].address_components,\n\t\t\t\t\tcity = this.getCity(addressArray),\n\t\t\t\t\tarea = this.getArea(addressArray),\n\t\t\t\t\tstate = this.getState(addressArray);\n\t\t\t\tthis.setState({\n\t\t\t\t\taddress: (address) ? address : '',\n\t\t\t\t\tarea: (area) ? area : '',\n\t\t\t\t\tcity: (city) ? city : '',\n\t\t\t\t\tstate: (state) ? state : '',\n\t\t\t\t\tmarkerPosition: {\n\t\t\t\t\t\tlat: newLat,\n\t\t\t\t\t\tlng: newLng\n\t\t\t\t\t},\n\t\t\t\t\tmapPosition: {\n\t\t\t\t\t\tlat: newLat,\n\t\t\t\t\t\tlng: newLng\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t},\n\t\t\terror => {\n\t\t\t\tconsole.error(error);\n\t\t\t}\n\t\t);\n\t};\n\n\t/**\n\t * When the user types an address in the search box\n\t * @param place\n\t*/\n\tonPlaceSelected = (place) => {\n\t\tconsole.log('plc', place);\n\t\tconst address = place.formatted_address,\n\t\t\taddressArray = place.address_components\n\t\tconsole.log(address)\n\t\tthis.setState({ address: address })\n\t\tGeocode.fromAddress(address).then(\n\t\t\tresponse => {\n\t\t\t\tconsole.log(response)\n\t\t\t\tconst { latValue, lngValue } = response.results[0].geometry.location;\n\t\t\t\tthis.setState({\n\t\t\t\t\taddress: (address) ? address : '',\n\n\t\t\t\t\tmarkerPosition: {\n\t\t\t\t\t\tlat: latValue,\n\t\t\t\t\t\tlng: lngValue\n\t\t\t\t\t},\n\t\t\t\t\tmapPosition: {\n\t\t\t\t\t\tlat: latValue,\n\t\t\t\t\t\tlng: lngValue\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t\tconsole.log(latValue, lngValue);\n\t\t\t},\n\t\t\terror => {\n\t\t\t\tconsole.error(error);\n\t\t\t}\n\t\t);\n\t\t// Set these values in the state.\n\t};\n\n\tsubmitData(event) {\n\t\tconst help = {\n\t\t\tvar1: this.state.var1,\n\t\t\tvar2: this.state.var2,\n\t\t\tvar3: this.state.var3,\n\t\t\tsugg: this.state.sugg,\n\t\t\tlocation: this.state.address,\n\t\t}\n\t\tconsole.log(help)\n\t\tAxios.post(`${SUBMIT_URL}`, help)\n\t\t\t.then((response) => {\n\t\t\t\tconsole.log(response)\n\t\t\t\tthis.checkLogin()\n\t\t\t\t//this.props.history.push(\"/thanks/\")\n\t\t\t}).catch((error) => {\n\t\t\t\tconsole.log(error)\n\t\t\t\tconsole.log(\"error in adding \")\n\t\t\t})\n\t}\n\tcheckLogin() {\n\t\tconsole.log(\"trying to open login page\")\n\t\tthis.props.history.push(\"/thanks/\")\n\t\twindow.location.reload(false);\n\n\t}\n\n\trender() {\n\t\tconst AsyncMap = withScriptjs(\n\t\t\twithGoogleMap(\n\t\t\t\tprops => (\n\t\t\t\t\t<div className=\"mapCov\">\n\t\t\t\t\t\t<GoogleMap google={this.props.google}\n\t\t\t\t\t\t\tdefaultZoom={this.props.zoom}\n\t\t\t\t\t\t\tdefaultCenter={{ lat: this.state.mapPosition.lat, lng: this.state.mapPosition.lng }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{/* InfoWindow on top of marker */}\n\t\t\t\t\t\t\t<InfoWindow\n\t\t\t\t\t\t\t\tonClose={this.onInfoWindowClose}\n\t\t\t\t\t\t\t\tposition={{ lat: (this.state.markerPosition.lat + 0.0018), lng: this.state.markerPosition.lng }}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<span style={{ padding: 0, margin: 0 }}>{this.state.address}</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</InfoWindow>\n\t\t\t\t\t\t\t{/*Marker*/}\n\t\t\t\t\t\t\t<Marker google={this.props.google}\n\t\t\t\t\t\t\t\tname={'Dolores park'}\n\t\t\t\t\t\t\t\tdraggable={true}\n\t\t\t\t\t\t\t\tonDragEnd={this.onMarkerDragEnd}\n\t\t\t\t\t\t\t\tposition={{ lat: this.state.markerPosition.lat, lng: this.state.markerPosition.lng }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Marker />\n\t\t\t\t\t\t\t{/* For Auto complete Search Box */}\n\t\t\t\t\t\t\t<div className=\"mapResult\">\n\t\t\t\t\t\t\t\t{/* <Autocomplete className=\"form-control\"\n\t\t\t\t\t\t\t\tonPlaceSelected={this.onPlaceSelected}\n\t\t\t\t\t\t\t\ttypes={['(regions)']}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t*/}\n\t\t\t\t\t\t\t\t<button type=\"submit\"\n\t\t\t\t\t\t\t\t\tclassName=\"btn btn_sub_help\"\n\t\t\t\t\t\t\t\t\tonClick={(e) => this.submitData(e)}> Help </button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</GoogleMap>\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\t\tlet map;\n\t\tif (this.props.center.lat !== undefined) {\n\t\t\tmap = <div>\n\t\t\t\t<div>\n\t\t\t\t\t{/* \t<div className=\"form-group\">\n\t\t\t\t\t\t<label htmlFor=\"\">City</label>\n\t\t\t\t\t\t<input type=\"text\" name=\"city\" className=\"form-control\" onChange={ this.onChange } readOnly=\"readOnly\" value={ this.state.city }/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<label htmlFor=\"\">Area</label>\n\t\t\t\t\t\t<input type=\"text\" name=\"area\" className=\"form-control\" onChange={ this.onChange } readOnly=\"readOnly\" value={ this.state.area }/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<label htmlFor=\"\">State</label>\n\t\t\t\t\t\t<input type=\"text\" name=\"state\" className=\"form-control\" onChange={ this.onChange } readOnly=\"readOnly\" value={ this.state.state }/>\n\t\t</div> */}\n\t\t\t\t\t<form>\n\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t<div className=\"col-sm-12\"><h3 className=\"map_title\">Please suggest {this.state.var1} with {this.state.var2}  & {this.state.var3}  near {this.state.loc} </h3></div>\n\t\t\t\t\t\t\t<div className=\"col-sm-6\">\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<label htmlFor=\"\">Address</label>\n\t\t\t\t\t\t\t\t<input type=\"text\" name=\"address\" className=\"form-control\" onChange={this.onChange} readOnly=\"readOnly\" value={this.state.address} />\n\n\t\t\t\t\t\t\t</div></div>\n\t\t\t\t\t\t\t<div className=\"col-sm-6\">\n\t\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t\t<label htmlFor=\"\">Please type your suggestion</label>\n\t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"sugg\" className=\"form-control\" onChange={this.onSuggestion} />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"col-sm-12\">\n\t\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t\t<label htmlFor=\"\">Drag the pointer to the location of your suggestion</label>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</form>\n\n\t\t\t\t</div>\n\n\t\t\t\t<AsyncMap\n\t\t\t\t\tgoogleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyDGe5vjL8wBmilLzoJ0jNIwe9SAuH2xS_0&libraries=places\"\n\t\t\t\t\tloadingElement={\n\t\t\t\t\t\t<div />\n\t\t\t\t\t}\n\t\t\t\t\tcontainerElement={\n\t\t\t\t\t\t<div className=\"mapCov\" style={{ height: this.props.height }} />\n\t\t\t\t\t}\n\t\t\t\t\tmapElement={\n\t\t\t\t\t\t<div style={{ height: `100%` }} />\n\t\t\t\t\t}\n\t\t\t\t\tcenter={{ lat: this.state.markerPosition.lat, lng: this.state.markerPosition.lng }}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t} else {\n\t\t\tmap = <div style={{ height: this.props.height }} />\n\t\t}\n\t\treturn (map)\n\t}\n}\nexport default withRouter(Map)","import React, { Component } from 'react';\nimport LocationPicker from 'react-location-picker';\nimport Map from './Map'\nimport queryString from 'querystring'\n/* Default position */\nimport Geocode from \"react-geocode\"\nGeocode.setApiKey(\"AIzaSyD6SFZcoYyCDs21kC_MV5mI12OeyjWyxFc\");\nGeocode.enableDebug();\nconst defaultPosition = {\n  lat: 27.9878,\n  lng: 86.9250\n};\n\n\nclass SelectPlace extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      var1: '',\n      var2: '',\n      var3: '',\n      lat: 18.5204,\n      lng: 73.8567,\n      loc: '',\n      loading: true\n    }\n  }\n  componentDidMount() {\n    console.log('Component did mount!')\n    console.log(this.props)\n    const query = this.props.location.search\n    console.log(this.props.location.search)\n    const values = queryString.parse(query.substr(1))\n    console.log(values)\n    console.log(values.id)\n    this.setState(\n      {\n        var1: values.var1,\n        var2: values.var2,\n        var3: values.var3,\n        lat: parseFloat(values.lat),\n        lng: parseFloat(values.lng)\n      })\n    console.log(this.state.var1)\n    console.log(this.state.var2, this.state.var3)\n    Geocode.fromLatLng(values.lat, values.lng).then(\n      response => {\n        const address = response.results[0].formatted_address;\n        this.setState(\n          { loc: address }\n        )\n        this.setState(\n          { loading: false }\n        )\n        console.log(address);\n      },\n      error => {\n        console.error(error);\n      }\n    );\n\n  }\n  render() {\n    if (this.state.loading === true) {\n      return \"loading\";\n    }\n    else {\n      return (\n        <div id=\"mapWrap\">\n          <div className=\"container\">\n            <Map\n              google={this.props.google}\n              center={{ lat: this.state.lat, lng: this.state.lng }}\n              //   center={{ lat: 18.5204, lng: 73.8567 }}\n              var1={this.state.var1}\n              var2={this.state.var2}\n              var3={this.state.var3}\n              loc={this.state.loc}\n              zoom={15}\n            />\n          </div>\n        </div>\n      )\n    }\n  }\n}\nexport default SelectPlace;","import axios from 'axios' \nconst API_URL = 'http://localhost:8080/send' \nconst HELP_URL = `/send/getHelpedNumber`\nconst DATA_URL = `/send/get`\n export const TOKEN=\"token\"\n export const headers = { \n  'Authorization': 'Bearer '+localStorage.getItem(TOKEN)\n}\nclass DashService {\n  retrieveValue() {\n    console.log(\"getting the value................\")\n    return axios.get(`${HELP_URL}`,{headers :headers});\n  }\n  getData()\n  {\n    console.log(\"getting the value................\")\n    console.log(localStorage.getItem('authenticatedUser'))\n    return axios.post(`${DATA_URL}`, localStorage.getItem('authenticatedUser'),\n    {headers:\n       {\"Content-Type\": \"text/plain\" , \n        'Authorization': 'Bearer '+localStorage.getItem(TOKEN)\n      }\n      });\n\n  }\n  \n}\nexport default new DashService()","import   React  from 'react' \nimport { BrowserRouter as Router, Route, history, Redirect ,Link} from 'react-router-dom'\n\nimport  './styleMedia.css'\nimport  './styleCommon.css'\nimport DashService from './DashService'\n\nclass DashBoard extends React.Component {\n    constructor(props) {\n      super(props)\n      this.state = {\n        name:'Raju Tamang daii ',\n        email:'raju_123@gmail.com',\n        phone:'9867745342',\n        helped:'12'\n      }  \n    }\n   componentDidMount() {\n    console.log('Component did mount!')\n    DashService.retrieveValue()\n    .then(\n      response => {\n        console.log(response);\n       this.setState({helped: response.data })\n      \n    } \n    )\n    DashService.getData()\n    .then(\n        response => {\n          console.log(response);\n          console.log(response.data.firstName)\n          console.log(response.data.email)\n          console.log(response.data.phone)\n         this.setState( \n          {name: response.data.firstName})\n          this.setState( \n          {email: response.data.email})\n          this.setState( {phone: response.data.phoneNumber}\n          )\n        \n      } \n      )\n       \n }\n \n    \n  \n    \n    render()\n    {\n     // this.refreshHelpedOne()\n        return(\n           \n          <section id=\"detailWrap\">\n             <div class=\"container\">\n                  <div class=\"row\">\n                      <div class=\"col-sm-12\">\n                          <div class=\"row\">\n                              <div class=\"col-sm-12 help_cov\">\n                                  <a class=\"btn help\" href=\"#\">\n                                  <Link to=\"/chose\">\n                                    Ask help\n                                    </Link>\n                                    </a>\n                              </div>\n                          </div>\n                          <div class=\"detailBlock\">\n                              <div class=\"profile_photo\">\n                                  <img src=\"help.png\" class=\"rounded-circle\" alt=\"profile_photo\"/>\n                              </div>\n                              <div class=\"no_people\">\n                             <span>Number of people Helped :\n                              <b> {this.state.helped}</b>   </span>\n                              </div>\n                              <ul class=\"info\">\n                                  <li>{this.state.name}</li>\n                                  <li>{this.state.email}</li>\n                                  <li>{this.state.phone}</li>\n                              </ul>\n                          </div>\n                      </div>\n                  </div>\n              </div>\n          </section>\n             \n\n          \n       )\n    }\n}\nexport default DashBoard;\n","import axios from 'axios'\nimport { BrowserRouter as Router, Route, history, Redirect ,Link} from 'react-router-dom'\nconst API_URL = ''\nexport const USER_NAME_SESSION_ATTRIBUTE_NAME = 'authenticatedUser'\nexport const SCHOOL_NAME_SESSION_ATTRIBUTE_NAME = 'authenticatedSchool'\nexport const TOKEN=\"token\"\nexport const headers = { \n    'Authorization': 'Bearer '+localStorage.getItem(TOKEN)\n  }\n \nclass AuthenticationService \n{\n    executeJwtAuthenticationService($signin)\n     {\n        return axios.post(`${API_URL}/api/auth/signin`,$signin)\n    } \n    registerSuccessfulLoginForJwt(username, token,role) {\n      console.log(token)\n      console.log(role)\n      console.log(username)\n      \n      localStorage.setItem(USER_NAME_SESSION_ATTRIBUTE_NAME, username)\n      localStorage.setItem(TOKEN,token)\n      this.setupAxiosInterceptors(this.createJWTToken(token))\n  }\n\n   signUpRequest($signup) {\n        console.log(($signup))\n        //  console.log($school+$subjet+$time)\n      return   axios.post(`${API_URL}/api/auth/signup`,$signup)\n       \n      }\n      isUserLoggedIn() {\n        let user = localStorage.getItem(USER_NAME_SESSION_ATTRIBUTE_NAME)\n        if (user === null) return false\n        return true\n    }\n    logout() {\n      localStorage.removeItem(USER_NAME_SESSION_ATTRIBUTE_NAME);\n      localStorage.removeItem(SCHOOL_NAME_SESSION_ATTRIBUTE_NAME); \n      localStorage.removeItem(TOKEN);\n    //  this.props.history.push(`/login`)\n  }\n    setupAxiosInterceptors(token) {\n      console.log(token)\n      axios.interceptors.request.use(\n          (config) => {\n              if (token) {\n                  config.headers.authorization = token\n              }\n              return config\n          }\n      )\n  }\n}\nexport default new AuthenticationService()","import React from 'react'; \nimport PlacesAutocomplete, { geocodeByAddress } from 'react-places-autocomplete'\n\nimport '../SelectPlace/Map.css'\nclass Locat  extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { address: '',\n                    city:'',\n                  area:'',\n                state:'',\n              postalcode:'' }\n    this.setFormLocation = this.setFormLocation.bind(this)\n    this.handleSelect = this.handleSelect.bind(this)\n  }\n\n  handleChange = (address) => {\n    this.setState({ address })\n  }\n\n  // When the user selects an autocomplete suggestion...\n  handleSelect  (place)\n   {\n    // Pull in the setFormLocation function from the parent ReportForm\n   // const setFormLocation = this.props.setFormLocation\n      this.props.onSelect(place); \n       \n    geocodeByAddress(place)\n      .then(results =>{ \n    const   addressArray =  results[0].address_components\n    console.log(addressArray)\n     const city=this.setFormLocation ( addressArray )\n       })\n      .catch(error =>\n        {console.error('Error', error)\n\n\n      })\n      \n  }\n  setFormLocation ( addressArray )\n  {\n    console.log(\"heloo this method is working \")\n    let city = '';\n    let state ='';\n    let area='';\n    for( let i = 0; i < addressArray.length; i++ )\n     {\n      if ( addressArray[ i ].types[0] && 'administrative_area_level_2' === addressArray[ i ].types[0] )\n       {\n        city ='City :'+ addressArray[ i ].long_name;\n        this.setState({city : city})\n        console.log(city)\n       } \n       if ( addressArray[ i ].types[0] && 'administrative_area_level_1' === addressArray[ i ].types[0] )\n        {\n       state = 'State :'+addressArray[ i ].long_name;\n       this.setState({state: state})\n       console.log(state)\n        } \n        if ( addressArray[ i ].types[0]  ) {\n          for ( let j = 0; j < addressArray[ i ].types.length; j++ ) {\n            if ( 'sublocality_level_1' === addressArray[ i ].types[j] || 'locality' === addressArray[ i ].types[j] ) {\n              area = 'Area :'+ addressArray[ i ].long_name;\n              this.setState({area : area})\n              console.log(area)\n            }\n          }\n        }\n       console.log(city+state+area)\n\t\t}\n\t};\n\n  render() {\n    const renderInput = ({ getInputProps, getSuggestionItemProps, suggestions }) => (\n      \n      <div className=\"autocomplete-root\"\n     >\n        <input className=\"form-control\" \n         \n     { ...getInputProps({\n      placeholder: 'Location '})}\n      {...getInputProps()}  />\n        <div className=\"autocomplete-dropdown-container\">\n          {suggestions.map(suggestion => (\n           // <!-- Add a style of \"suggestion\" to the suggested locations -->\n            <div {...getSuggestionItemProps(suggestion)} className=\"suggestion\">\n              <span>{suggestion.description}</span>\n            </div>\n          ))}\n        </div>\n        \n      </div>\n    );\n\n    // Limit the suggestions to show only cities in the US\n     /*const searchOptions = {\n      types: ['(cities)'],\n      componentRestrictions: {country: \"us\"}\n     }\n*/\n    return (\n      <PlacesAutocomplete\n        value={this.state.address}\n        onChange={this.handleChange}\n        onSelect={this.handleSelect} \n        renderInput={{ placeholder: 'Enter address' }}\n        // Pass the search options prop\n        //searchOptions={searchOptions}\n        \n      >\n        {renderInput}\n      </PlacesAutocomplete>\n    );\n  }\n \n}\n\nexport default Locat;\n","import React from 'react'\nimport { BrowserRouter as Router, Route, history, Redirect, Link } from 'react-router-dom'\nimport './register.css'\nimport AuthenciationService from './AuthenciationService' \nimport PlacesAutocomplete, { geocodeByAddress } from 'react-places-autocomplete'\n\nimport Place from './Place'\nimport Locat from './Locat'\nimport LocationService from './LocationService'\nclass SignUp extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      name: '',\n      sname: '',\n      email: '',\n      numb: '',\n      loc:'',\n      postcode: '',\n      rid: '',\n      psw: '',\n      city:'',\n      street:'',\n      phn:'',\n      hphn:''\n    }\n    this.handleChange = this.handleChange.bind(this)\n    this.submitData = this.submitData.bind(this)\n    this.handleCo = this.handleCo.bind(this)\n    this.onPlaceSelected = this.onPlaceSelected.bind(this)\n  }\n  handleChange(event) {\n    console.log(event.target.value)\n    const { name, value } = event.target\n    this.setState({\n      [name]: value\n    })\n  }\n  handleCo(cordinate) {\n    this.setState({\n      postcode: cordinate\n    })\n  }\n  onPlaceSelected(loc)\n  {\n    this.setState(\n      {\n        loc:loc,\n      }\n      )\n      geocodeByAddress(loc)\n      .then(results =>{ \n    const   addressArray =  results[0].address_components\n    console.log(addressArray)\n     const cit=LocationService.getCity(addressArray)\n     const postal=LocationService.getpostal(addressArray)\n     console.log(postal)\n     this.setState(\n      {\n        postcode: postal,\n        city: cit\n      })\n       })\n      .catch(error =>\n        {console.error('Error', error)\n\n\n      })\n  }\n  submitData(event) {\n    event.preventDefault()\n    \n    console.log(this.state.sname)\n    const signup = {\n      firstName: this.state.name,\n      surname: this.state.sname,\n      email: this.state.email,\n      phoneNumber: this.state.numb,\n      postalCode: this.state.postcode,\n      rId: this.state.rid,\n      psw: this.state.psw\n    };\n    AuthenciationService.signUpRequest(signup)\n      .then((response) => {\n        console.log(this.state.name)\n    //    this.props.history.push(\"/message/\")\n        this.props.history.push({\n          pathname: '/message/',\n         // search: '?query=abc',\n            detail: this.state.name \n        })\n        //  window.location.reload(false);   \n        //  window.location.reload(false);   \n\n      }).catch(() => {\n        console.log(\"error in adding\")\n        // this.props.history.push(\"/login/\")\n        this.setState({ showSuccessMessage: false })\n        this.setState({ hasLoginFailed: true })\n      })\n  }\n  render() {\n    // this.refreshHelpedOne()\n    return (\n      <section id=\"signUpWrap\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-sm-7\">\n              <div className=\"formWrap\">\n                <form>\n                  <div className=\"form-group\">\n                    <h3>Create an Account</h3>\n                    <div className=\"form-divider\">\n                      <div className=\"feild_title\">\n                        <h4>Your Details</h4>\n                      </div>\n                      <div className=\"feildCov\">\n                        <div className=\"row feild_entry\">\n                          <div className=\"col-sm-4 label\">\n                            <label>First Name</label>\n                          </div>\n                          <div className=\"col-sm-8 feild\">\n                            <input type=\"text\" onChange={this.handleChange} name=\"name\" className=\"form-control\" />\n                          </div>\n                        </div>\n                        <div className=\"row feild_entry\">\n                          <div className=\"col-sm-4 label\">\n                            <label>Last Name</label>\n                          </div>\n                          <div className=\"col-sm-8 feild\">\n                            <input type=\"text\" onChange={this.handleChange} name=\"sname\" className=\"form-control\" />\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"form-divider\">\n                      <div className=\"feild_title\">\n                        <h4>Email and password</h4>\n                      </div>\n                      <div className=\"feildCov\">\n                        <div className=\"row feild_entry\">\n                          <div className=\"col-sm-4 label\">\n                            <label>Email address</label>\n                          </div>\n                          <div className=\"col-sm-8 feild\">\n                            <input type=\"email\" onChange={this.handleChange} name=\"email\" className=\"form-control\" />\n                          </div>\n                        </div>\n                        <div className=\"row feild_entry\">\n                          <div className=\"col-sm-4 label\">\n                            <label>UserName</label>\n                          </div>\n                          <div className=\"col-sm-8 feild\">\n                            <input type=\"text\" onChange={this.handleChange} name=\"rid\" className=\"form-control\" />\n                          </div>\n                        </div>\n                        <div className=\"row feild_entry\">\n                          <div className=\"col-sm-4 label\">\n                            <label>Password</label>\n                          </div>\n                          <div className=\"col-sm-8 feild\">\n                            <input type=\"password\" name=\"psw\" className=\"form-control\" required onChange={this.handleChange} required />\n                          </div>\n                        </div>\n                        <div className=\"row feild_entry\">\n                          <div className=\"col-sm-4 label\">\n                            <label>Confirm Password</label>\n                          </div>\n                          <div className=\"col-sm-8 feild\">\n                            <input type=\"password\" name=\"psw1\" className=\"form-control\" required onChange={this.handleChange} required />\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"form-divider\">\n                      <div className=\"feild_title\">\n                        <h4>Your address</h4>\n                      </div>\n                      <div className=\"feildCov\">\n                      <div className=\"row feild_entry\">\n                          <div className=\"col-sm-4 label\">\n                            <label>* Location</label>\n                          </div>\n                          <div className=\"col-sm-8 feild\">\n                            <Locat\n                              onSelect={this.onPlaceSelected}   name=\"loc\"   className=\"form-control\"  />\n                               \n                          </div>\n                        </div>\n                        <div className=\"row feild_entry\">\n                          <div className=\"col-sm-4 label\">\n                            <label>Street</label>\n                          </div>\n                          <div className=\"col-sm-8 feild\">\n                            <input type=\"text\" onChange={this.handleChange} name=\"street\" className=\"form-control\" />\n                          </div>\n                        </div>\n                        <div className=\"row feild_entry\">\n                          <div className=\"col-sm-4 label\">\n                            <label>City or Town</label>\n                          </div>\n                          <div className=\"col-sm-8 feild\">\n                            <input type=\"text\" name=\"city\"  defaultValue ={this.state.city} className=\"form-control\" required onChange={this.handleChange} required />\n                          </div>\n                        </div>\n                        <div className=\"row feild_entry\">\n                          <div className=\"col-sm-4 label\">\n                            <label>Post Code</label>\n                          </div>\n                          <div className=\"col-sm-8 feild\">\n                            <input type=\"text\" name=\"postcode\" defaultValue ={this.state.postcode} className=\"form-control\" required onChange={this.handleChange} required />\n                          </div>\n                        </div>\n                        <div className=\"row feild_entry\">\n                          <div className=\"col-sm-4 label\">\n                            <label>Country</label>\n                          </div>\n                          <div className=\"col-sm-8 feild\">\n                            <select class=\"form-control input-lg\">\n                              <option>USA</option>\n                              <option>UK</option>\n                              <option selected=\"selected\">SPAIN</option>\n                              <option>GERMANY</option>\n                              <option>POLAND</option>\n                            </select>\n                          </div>\n                        </div>\n                        <div className=\"row feild_entry\">\n                          <div className=\"col-sm-4 label\">\n                            <label>Phone Number</label>\n                          </div>\n                          <div className=\"col-sm-8 feild\">\n                            <input type=\"number\" name=\"numb\" className=\"form-control\" required onChange={this.handleChange} required />\n                          </div>\n                        </div>\n                        <div className=\"row feild_entry\">\n                          <div className=\"col-sm-4 label\">\n                            <label>Home Phone Number</label>\n                          </div>\n                          <div className=\"col-sm-8 feild\">\n                            <input type=\"number\" name=\"hphn\" className=\"form-control\" required onChange={this.handleChange} required />\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"form-divider\">\n                      <div className=\"feild_title\">\n                        <h4>Keeping you informed</h4>\n                      </div>\n                      <div className=\"row feild_entry\">\n                        <div className=\"col-sm-12 text\">\n                          <p> You will be recieving the text message whenever the\n                             new user tries to seek the places or recommendation near\n                              the address you have registered .\n                               By signing up  you agreed to our privacy policy and\n                      allows us to send sms in the provided number as per needed  .\n\n                          </p>\n                             </div>\n                        <div className=\"col-sm-12 checkBox\">\n                          <ul>\n                            <li>\n                              <input type=\"checkbox\" /><label for=\"remember\">\n                                I agree to the terms and conditions and privacy policy statement </label>\n                            </li>\n                      {/*      <li>\n                              <input type=\"checkbox\" /><label for=\"remember\"> Telephone</label>\n                            </li>\n                            <li>\n                              <input type=\"checkbox\" /><label for=\"remember\"> Email</label>\n                            </li>\n                            <li>\n                              <input type=\"checkbox\" /><label for=\"remember\"> Text</label>\n                            </li>\n                            */} \n                          </ul>\n                        </div>\n                      </div>\n                    </div>\n\n\n\n                    {/*<input type=\"text\" onChange={this.handleChange} name=\"postcode\"   className=\"form-control\" placeholder=\"PostCode\"/>\n                                    */}\n                    {/* <Place\n\n                        onSelect={this.handleCo} name=\"postcode\" className=\"form-control\" /> */}\n\n\n\n\n                  </div>\n                  <div className=\"col-sm-12 submitBtn\" >\n                    <button type=\"submit\" className=\"btn sub_help\" onClick={this.submitData}> Register </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    )\n  }\n}\nexport default SignUp\n","import   React  from 'react' \nimport AuthenciationService from './AuthenciationService' \nimport { BrowserRouter as Router, Route, history, Redirect ,Link} from 'react-router-dom'\nimport  './login.css'\nexport const USER_NAME_SESSION_ATTRIBUTE_NAME = 'authenticatedUser'\nclass Login  extends React.Component {\n    constructor(props) {\n      super(props)\n      this.state = {\n                rid:'',\n                psw:'',\n                sucessLogin: 'false',\n                failedLogin: ''\n          \n          }  \n          this.handleChange=this.handleChange.bind(this)\n          this.submitData = this.submitData.bind(this)\n          this.checkLogin = this.checkLogin.bind(this)\n         }\n    handleChange(event) {\n    console.log(event.target.value)\n    const { name, value } = event.target\n    this.setState({\n      [name]: value\n    }) \n  }\n\n  submitData(event) {\n    event.preventDefault();\n    console.log(\"hello hunny bunny \")\n    const { name, value } = event.target\n    this.setState({\n      [name]: value\n    })\n    const signIn = {\n      usernameOrEmail: this.state.rid,\n      password: this.state.psw\n    };\n    AuthenciationService\n      .executeJwtAuthenticationService(signIn)\n      .then((response) => {\n        console.log(response)\n        console.log(response.data.accessToken)\n        console.log(response.data.role)\n        AuthenciationService.registerSuccessfulLoginForJwt(response.data.role, response.data.accessToken)\n        console.log(\"trying to push \")\n         \n        this.props.history.push(\"/dash/\")\n        window.location.reload(false);   \n        //  window.location.reload(false);   \n\n      }).catch(() => {\n        console.log(\"error\")\n        this.setState({ showSuccessMessage: false })\n        this.setState({ hasLoginFailed: true })\n      })\n\n  }\n  checkLogin() {\n    if (AuthenciationService.isUserLoggedIn()) {\n      console.log(\"trying to open login page\")\n      this.props.history.push(\"/dash/\")\n      window.location.reload(false);\n    }\n  }\n  componentDidMount() {\n\n  }\n\n\n\n\n  render() {\n    this.checkLogin()\n    return (\n      <section id=\"formWrap\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-sm-12\">\n\n              <div className=\"formWrap\">\n                <form>\n                  <div className=\"form-group\">\n                    <input type=\"text\" name='rid' onChange={this.handleChange} className=\"form-control\" placeholder=\"Username or Email\" />\n                    <input type=\"password\" name='psw' onChange={this.handleChange} className=\"form-control\" placeholder=\"Password\" />\n                  </div>\n                  <div className=\"col-sm-12\" align=\"center\">\n                    <button type=\"submit\" onClick={this.submitData} className=\"btn sub_help\"> LOGIN </button>\n                  </div>\n                  <div className=\"cov-rem clearfix\">\n                    <div className=\"rem\">\n                      <input type=\"checkbox\" />\n                      <label for=\"remember\"> Remember Me?</label>\n                    </div>\n                    <div className=\"rem\">\n                      <p className=\" small\"><a href=\"#\">Forgot Password?</a></p>\n                    </div>\n                  </div>\n                  <hr />\n                  <p className=\"noac\">Not member yet? <Link  to=\"/sign/\"><a href=\"#\">Register Now</a></Link></p>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    )\n\n  }\n}\nexport default Login;\n","import React, { Component } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport AuthenciationService from '../Authenciation/AuthenciationService'\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport CameraIcon from '@material-ui/icons/PhotoCamera';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport '../HomePage/Home.css'\n// import Link from '@material-ui/core/Link';\nimport './Bootstrap.css'\n\nclass MenuComponent extends Component {\n\n    render() {\n        const loggedIn = AuthenciationService.isUserLoggedIn();\n           console.log(loggedIn)\n        return (\n            <header>>\n                <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\n\n                    <AppBar>\n                        <Toolbar>\n                            <div><a href=\"#\" className=\"navbar-brand\">KlyGo</a></div>\n                            <ul className=\"navbar-nav\">\n                                {loggedIn && <li><Link className=\"nav-link\" to=\"/add\">Select Place</Link></li>}\n                                {loggedIn && <li><Link className=\"nav-link\" to=\"/chose\">Ask for help</Link></li>}\n                                {loggedIn && <li><Link className=\"nav-link\" to=\"/dash\">DashBoard</Link></li>}\n                                {/* \n                     {loggedIn &&   <li><Link className=\"nav-link\" to=\"/add\">TeacherForm</Link></li>}\n                     {loggedIn &&   <li><Link className=\"nav-link\" to=\"/register\">RegisterSchool</Link></li>} */}\n\n                            </ul>\n                            <ul className=\"navbar-nav navbar-collapse justify-content-end\">\n                                {!loggedIn && <li><Link className=\"nav-link\" to=\"/login/\">Login</Link></li>}\n                                {!loggedIn && <li><Link className=\"nav-link\" to=\"/sign\">SignUp </Link></li>}\n                                {loggedIn && <li><Link className=\"nav-link\" to=\"/\" onClick={AuthenciationService.logout}>Logout</Link></li>}\n                             {/* {loggedIn && <li><Link className=\"nav-link\" to=\"/Message\">Message </Link></li>}\n                            */} \n                           </ul>\n\n                        </Toolbar>\n                    </AppBar>\n                </nav>\n            </header>\n        )\n    }\n}\n\nexport default withRouter(MenuComponent)","import   React  from 'react' \nimport { BrowserRouter as Router, Route, history, Redirect ,Link} from 'react-router-dom'\nimport './thanks.css'\nclass ThankYOu extends React.Component {\n    constructor(props) {\n      super(props)\n      this.state = {\n        \n      }  \n    }\n   componentDidMount() {\n    \n      }\n \n    \n  \n    \n    render()\n    {\n     // this.refreshHelpedOne()\n        return( \n          <section id=\"main\">\n          <section id=\"formWrap\">\n              <div class=\"container\">\n                  <div class=\"row\">\n                      <div class=\"col-sm-12\">\n\n                          <div class=\"formWrap\" align=\"center\">\n                              <p><strong>Thanks a lot !</strong></p>\n                              <p>You have been of great help . One step to bring a master in your area.</p>\n                          </div>\n                      </div>\n                  </div>\n              </div>\n          </section>\n      </section>\n        )   \n        \n    }\n}\nexport default ThankYOu;\n","import React, { Component } from 'react'\nimport './Message.css'\nimport { Link ,withRouter} from 'react-router-dom'\nclass Message extends Component {\n    render() {\n       console.log (this.props.location)\n        return (\n            <section id=\"messageWrap\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-sm-12\">\n                            <div className=\"messageCov\">\n                                <h1>Thanks for Signing up, {this.props.location.detail}\n                                     . We'r glad you are here.</h1>\n                                <div className=\"mail\">\n                                    <span><i class=\"fas fa-envelope\"></i></span>\n                                </div>\n                                <p>An activation mail has been sent to your email.</p>\n                                <b><Link to=\"/login/\"> <h6><u>click to login</u></h6></Link></b>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        )\n    }\n}\n\nexport default withRouter(Message)","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Choice from './Choice/Choice';\nimport SelectPlace from './SelectPlace/SelectPlace';\nimport DashBoard from './DashBoard/DashBoard';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\nimport SignUp from './Authenciation/SignUp';\nimport Login from './Authenciation/Login';\nimport MenuComponent from './NavBAr/MenuComponent';\nimport ThankYOu from './Authenciation/ThankYou';\nimport Message from './Authenciation/Message';\n\nfunction App() {\n  return (\n    <div>\n\n\n      <Router>\n        <MenuComponent />\n        <>\n          <Switch>\n            <Route path=\"/\" exact component={Login} />\n            <Route path=\"/add/\" component={SelectPlace} />\n            <Route path=\"/chose/\" component={Choice} />\n            <Route path=\"/dash/\" component={DashBoard} />\n            <Route path=\"/login/\" component={Login} />\n            <Route path=\"/sign/\" component={SignUp} />\n            <Route path=\"/thanks/\" component={ThankYOu} />\n            <Route path=\"/Message/\" component={Message} />\n\n           />\n        </Switch>\n        </>\n\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}